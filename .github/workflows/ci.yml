name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        platform:
          - name: amazonlinux2023
            kernel: '6.1'
            vmlinux: 'vmlinux-6.1-al2023.h'
            description: 'Amazon Linux 2023 (kernel 6.1)'
          - name: ubuntu2404
            kernel: '6.8'
            vmlinux: 'vmlinux-6.8-ubuntu.h'
            description: 'Ubuntu 24.04 LTS (kernel 6.8)'
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang llvm libbpf-dev linux-headers-generic gcc-multilib make
    
    - name: Setup vmlinux.h
      run: |
        cp kernels/${{ matrix.platform.vmlinux }} bpf/vmlinux.h
    
    - name: Generate eBPF
      env:
        CC: clang
      run: go generate ./...
    
    - name: Build
      run: |
        # Include kernel version in filename
        FILENAME="bpfview-${{ matrix.platform.name }}-kernel${{ matrix.platform.kernel }}"
        go build -v -o $FILENAME
        # Create checksum
        sha256sum $FILENAME > $FILENAME.sha256
        # Create description file
        echo "BPFView binary for ${{ matrix.platform.description }}" > $FILENAME.txt
    
    - name: Test
      run: go test -v ./...
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: bpfview-${{ matrix.platform.name }}
        path: |
          bpfview-${{ matrix.platform.name }}-kernel${{ matrix.platform.kernel }}
          bpfview-${{ matrix.platform.name }}-kernel${{ matrix.platform.kernel }}.sha256
          bpfview-${{ matrix.platform.name }}-kernel${{ matrix.platform.kernel }}.txt
        
  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write  # This is crucial for creating releases
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: List artifacts
      run: find artifacts -type f | sort
      
    - name: Create installation script
      run: |
        cat > install.sh << 'EOF'
        #!/bin/bash
        set -e

        # Determine the appropriate version to download
        if [ -f /etc/amazon-linux-release ]; then
          KERNEL=$(uname -r | cut -d'.' -f1-2)
          BINARY="bpfview-amazonlinux2023-kernel6.1"
          echo "Detected Amazon Linux 2023 with kernel $KERNEL"
          echo "Using binary built for kernel 6.1"
        elif [ -f /etc/os-release ] && grep -q "Ubuntu" /etc/os-release; then
          KERNEL=$(uname -r | cut -d'.' -f1-2)
          BINARY="bpfview-ubuntu2404-kernel6.8"
          echo "Detected Ubuntu with kernel $KERNEL"
          echo "Using binary built for kernel 6.8"
        else
          echo "Unsupported OS. Please download the appropriate binary manually."
          exit 1
        fi

        GITHUB_REPO="jnesss/bpfview"
        LATEST_RELEASE=$(curl -s https://api.github.com/repos/$GITHUB_REPO/releases/latest | grep "tag_name" | cut -d'"' -f4)
        
        echo "Downloading $BINARY from release $LATEST_RELEASE..."
        curl -L "https://github.com/$GITHUB_REPO/releases/download/$LATEST_RELEASE/$BINARY" -o bpfview
        
        chmod +x bpfview
        echo "Downloaded to $(pwd)/bpfview"
        
        if [ "$(id -u)" -eq 0 ]; then
          mv bpfview /usr/local/bin/
          echo "Installed bpfview to /usr/local/bin/"
        else
          echo "Run with sudo to install system-wide"
        fi

        echo "Note: This binary is built for the specific kernel version in its filename."
        echo "Compatibility with other distributions or kernel versions is not guaranteed."
        EOF
        
        chmod +x install.sh
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/bpfview-amazonlinux2023/bpfview-amazonlinux2023-kernel6.1
          artifacts/bpfview-amazonlinux2023/bpfview-amazonlinux2023-kernel6.1.sha256
          artifacts/bpfview-ubuntu2404/bpfview-ubuntu2404-kernel6.8
          artifacts/bpfview-ubuntu2404/bpfview-ubuntu2404-kernel6.8.sha256
          install.sh
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}