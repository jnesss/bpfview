name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - name: al2023
            kernel: '6.1'
            vmlinux: 'vmlinux-6.1-al2023.h'
            description: 'Amazon Linux 2023 (kernel 6.1)'
          - name: ubuntu2404
            kernel: '6.8'
            vmlinux: 'vmlinux-6.8-ubuntu.h'
            description: 'Ubuntu 24.04 LTS (kernel 6.8)'
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang llvm libbpf-dev linux-headers-generic gcc-multilib make
    
    - name: Setup vmlinux.h
      run: |
        cp kernels/${{ matrix.platform.vmlinux }} bpf/vmlinux.h
    
    - name: Generate eBPF
      env:
        CC: clang
      run: go generate ./...
    
    - name: Build
      run: |
        go build -v -o bpfview-${{ matrix.platform.name }}
        # Create checksum
        sha256sum bpfview-${{ matrix.platform.name }} > bpfview-${{ matrix.platform.name }}.sha256
        # Create description file
        echo "BPFView binary for ${{ matrix.platform.description }}" > bpfview-${{ matrix.platform.name }}.txt
    
    - name: Test
      run: go test -v ./...
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: bpfview-${{ matrix.platform.name }}
        path: |
          bpfview-${{ matrix.platform.name }}
          bpfview-${{ matrix.platform.name }}.sha256
          bpfview-${{ matrix.platform.name }}.txt
        
  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: List artifacts
      run: find artifacts -type f | sort
      
    - name: Create installation script
      run: |
        cat > install.sh << 'EOF'
        #!/bin/bash
        set -e

        # Determine the appropriate version to download
        if [ -f /etc/amazon-linux-release ]; then
          BINARY="bpfview-al2023"
          echo "Detected Amazon Linux 2023"
        elif [ -f /etc/os-release ] && grep -q "Ubuntu" /etc/os-release; then
          BINARY="bpfview-ubuntu2404"
          echo "Detected Ubuntu"
        else
          echo "Unsupported OS. Please download the appropriate binary manually."
          exit 1
        fi

        GITHUB_REPO="jnesss/bpfview"
        LATEST_RELEASE=$(curl -s https://api.github.com/repos/$GITHUB_REPO/releases/latest | grep "tag_name" | cut -d'"' -f4)
        
        echo "Downloading $BINARY from release $LATEST_RELEASE..."
        curl -L "https://github.com/$GITHUB_REPO/releases/download/$LATEST_RELEASE/$BINARY" -o bpfview
        
        chmod +x bpfview
        echo "Downloaded to $(pwd)/bpfview"
        
        if [ "$(id -u)" -eq 0 ]; then
          mv bpfview /usr/local/bin/
          echo "Installed bpfview to /usr/local/bin/"
        else
          echo "Run with sudo to install system-wide"
        fi
        EOF
        
        chmod +x install.sh
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/bpfview-al2023/bpfview-al2023
          artifacts/bpfview-al2023/bpfview-al2023.sha256
          artifacts/bpfview-ubuntu2404/bpfview-ubuntu2404
          artifacts/bpfview-ubuntu2404/bpfview-ubuntu2404.sha256
          install.sh
        generate_release_notes: true
